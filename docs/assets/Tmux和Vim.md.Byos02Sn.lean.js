import{_ as o,c as d,a2 as c,o as i}from"./chunks/framework.CAQ3h1-a.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"depp","prev":{"text":"上一页","link":"/Linux文件常用命令.html"},"next":{"text":"下一页","link":"/Git.html"}},"headers":[],"relativePath":"Tmux和Vim.md","filePath":"Tmux和Vim.md","lastUpdated":null}'),l={name:"Tmux和Vim.md"};function n(a,e,t,s,r,w){return i(),d("div",null,e[0]||(e[0]=[c('<h2 id="tmux" tabindex="-1">Tmux <a class="header-anchor" href="#tmux" aria-label="Permalink to &quot;Tmux&quot;">​</a></h2><p>1.功能 - 分屏。 - 允许断开Terminal连接后，继续运行进程。 2.结构： 一个tmux可以包含多个session，一个session可以包含多个window，一个window可以包含多个pane。 实例： tmux: session 0: window 0: pane 0 pane 1 pane 2 ... window 1 window 2 ... session 1 session 2 ... 3.常用操作： 1.<code>tmux</code>：新建一个session，其中包含一个window，window中包含一个pane，pane里打开了一个shell对话框。 2.按下<code>Ctrl + a</code>后手指松开，然后按<code>%</code>：将当前pane左右平分成两个pane。 3.按下<code>Ctrl + a</code>后手指松开，然后按<code>&quot;</code>（注意是双引号&quot;）：将当前pane上下平分成两个pane。 4.<code>Ctrl + d</code>：关闭当前pane；如果当前window的所有pane均已关闭，则自动关闭window；如果当前session的所有window均已关闭，则自动关闭session。 5.鼠标点击可以选pane。 6.按下<code>Ctrl + a</code>后手指松开，然后按<code>方向键</code>：选择相邻的pane。 7.鼠标拖动pane之间的分割线，可以调整分割线的位置。 8.按住<code>Ctrl + a</code>的同时按<code>方向键</code>，可以调整pane之间分割线的位置。 9.按下<code>Ctrl + a</code>后手指松开，然后按<code>z</code>：将当前pane全屏/取消全屏。 10.按下<code>Ctrl + a</code>后手指松开，然后按<code>d</code>：挂起当前session。 11.<code>tmux a</code>：打开之前挂起的session。 12.按下<code>Ctrl + a</code>后手指松开，然后按<code>s</code>：选择其它session。 - 方向键 —— 上：选择上一项 session/window/pane - 方向键 —— 下：选择下一项 session/window/pane - 方向键 —— 右：展开当前项 session/window - 方向键 —— 左：闭合当前项 session/window 13.按下<code>Ctrl + a</code>后手指松开，然后按<code>c</code>：在当前session中创建一个新的window。 14.按下<code>Ctrl + a</code>后手指松开，然后按<code>w</code>：选择其他window，操作方法与 12.完全相同。 15.按下<code>Ctrl + a</code>后手指松开，然后按<code>PageUp</code>：翻阅当前pane内的内容。 16.<code>鼠标滚轮</code>：翻阅当前pane内的内容。 17.在tmux中选中文本时，需要按住<code>shift</code>键。（仅支持Windows和Linux，不支持Mac，不过该操作并不是必须的，因此影响不大） 18.tmux中复制/粘贴文本的通用方式： - 按下<code>Ctrl + a</code>后松开手指，然后按<code>[</code><br> - 用鼠标选中文本，被选中的文本会被自动复制到tmux的剪贴板 - 按下<code>Ctrl + a</code>后松开手指，然后按<code>]</code>，会将剪贴板中的内容粘贴到光标处</p><h2 id="vim" tabindex="-1">Vim <a class="header-anchor" href="#vim" aria-label="Permalink to &quot;Vim&quot;">​</a></h2><ol><li>功能： <ul><li>命令行模式下的文本编辑器。</li><li>根据文件扩展名自动判别编程语言。支持代码缩进、代码高亮等功能。</li><li>使用方式：<code>vim filename</code> 如果已有该文件，则打开它。 如果没有该文件，则打开个一个新的文件，并命名为filename</li></ul></li><li>模式： <ul><li>一般命令模式 默认模式。命令输入方式：类似于打游戏放技能，按不同字符，即可进行不同操作。可以复制、粘贴、删除文本等。</li><li>编辑模式 在一般命令模式里按下<code>i</code>，会进入编辑模式。 按下<code>ESC</code>会退出编辑模式，返回到一般命令模式。</li><li>命令行模式 在一般命令模式里按下<code>:``/``?</code>三个字母中的任意一个，会进入命令行模式。命令行在最下面。 可以查找、替换、保存、退出、配置编辑器等。</li></ul></li><li>操作： <ol><li><code>i</code>：进入编辑模式</li><li><code>ESC</code>：进入一般命令模式</li><li><code>h</code> 或 左箭头键：光标向左移动一个字符</li><li><code>j</code> 或 向下箭头：光标向下移动一个字符</li><li><code>k</code> 或 向上箭头：光标向上移动一个字符</li><li><code>l</code> 或 向右箭头：光标向右移动一个字符</li><li><code>n&lt;Space&gt;</code>：<code>n</code>表示数字，按下数字后再按空格，光标会向右移动这一行的<code>n</code>个字符</li><li><code>0</code> 或 功能键<code>[Home]</code>：光标移动到本行开头</li><li><code>$</code> 或 功能键<code>[End]</code>：光标移动到本行末尾</li><li><code>G</code>：光标移动到最后一行</li><li><code>:n</code> 或 <code>nG</code>：<code>n</code>为数字，光标移动到第<code>n</code>行</li><li><code>gg</code>：光标移动到第一行，相当于<code>1G</code></li><li><code>n&lt;Enter&gt;</code>：<code>n</code>为数字，光标向下移动<code>n</code>行</li><li><code>/word</code>：向光标之下寻找第一个值为word的字符串。</li><li><code>?word</code>：向光标之上寻找第一个值为word的字符串。</li><li><code>n</code>：重复前一个查找操作</li><li><code>N</code>：反向重复前一个查找操作</li><li><code>:n1,n2s/word1/word2/g</code>：n1与n2为数字，在第n1行与n2行之间寻找word1这个字符串，并将该字符串替换为word2</li><li><code>:1,$s/word1/word2/g</code>：将全文的word1替换为word2</li><li><code>:1,$s/word1/word2/gc</code>：将全文的word1替换为word2，且在替换前要求用户确认。</li><li><code>v</code>：选中文本</li><li><code>d</code>：删除选中的文本</li><li><code>dd</code>: 删除当前行</li><li><code>y</code>：复制选中的文本</li><li><code>yy</code>: 复制当前行</li><li><code>p</code>: 将复制的数据在光标的下一行/下一个位置粘贴</li><li><code>u</code>：撤销</li><li><code>Ctrl + r</code>：取消撤销</li><li><code>大于号 &gt;</code>：将选中的文本整体向右缩进一次</li><li><code>小于号 &lt;</code>：将选中的文本整体向左缩进一次</li><li><code>:w</code> 保存</li><li><code>:w!</code> 强制保存</li><li><code>:q</code> 退出</li><li><code>:q!</code> 强制退出</li><li><code>:wq</code> 保存并退出</li><li><code>:set paste</code> 设置成粘贴模式，取消代码自动缩进</li><li><code>:set nopaste</code> 取消粘贴模式，开启代码自动缩进</li><li><code>:set nu</code> 显示行号</li><li><code>:set nonu</code> 隐藏行号</li><li><code>gg=G</code>：将全文代码格式化</li><li><code>:noh</code> 关闭查找关键词高亮</li><li><code>Ctrl + q</code>：当vim卡死时，可以取消当前正在执行的命令</li></ol></li><li>异常处理： 每次用vim编辑文件时，会自动创建一个<code>.filename.swp</code>的临时文件。 如果打开某个文件时，该文件的swp文件已存在，则会报错。此时解决办法有两种： <ul><li>找到正在打开该文件的程序，并退出</li><li>直接删掉该swp文件即可</li></ul></li></ol>',4)]))}const u=o(l,[["render",n]]);export{m as __pageData,u as default};
